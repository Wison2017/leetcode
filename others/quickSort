void quick_sort (int[] A, int n) {
	quick_sort_c(A, 0, n - 1);
}

void quick_sort_c (int[] A, int start_index, int end_index) {
	if (start_index >= end_index) return;
	int q = partition(A, start_index, end_index);
	quick_sort_c(A, start_index, q - 1);
	quick_sort_c(A, q + 1, end_index);
}

int partition(int[] A, int start_index, int end_index) {
	int pivot = A[end_index];
	int i = start_index;
	for (int j = start_index; j <= end_index - 1; j++) {
	    if (A[j] < pivot) {
	        int temp = A[i];
	        A[i] = A[j];
	        A[j] = temp;
	        i++;
	    }
	}
	int temp = A[i];
	A[i] = pivot;
	A[r] = temp;

	return i;
}
