1: 一些常见的位运算：
   XOR - 异或：
   x ^ 0 = x
   x ^ 1s = ~x
   x ^ (~x) = 1s
   x ^ x = 0
   a ^ b = c => a ^ c = b, b ^ c = a
   a ^ b ^ c = a ^ (b ^ c) = (a ^ b) ^ c

   编程中：
   X & 1 == 1 OR == 0 判断奇偶性
   X = X & (X - 1) => 清零最低位的1
   X & -X => 得到最低位的1

   更为复杂的位运算操作：

   1: 将 x 最右边的n位清零 - x & (~0 << n)
   2: 获取 x 的第 n 位值(0或者1) - (x >> n) & 1
   3: 获取 x 的第 n 位的幂值 - x & (1 << (n - 1))
   4: 仅将第 n 位置为 1 - x | (1 << n)
   5: 仅将第 n 位置为 0 -x & (~(1<<n))
   6: 将 x 最高位至第 n 位(含)清零 - x & ((1 << n) - 1)
   7: 将第 n 位至第0位（含）清零 - x & (~((1 << (n + 1)) - 1))